#!/usr/bin/with-contenv bash

if [ -z "$PLUGINS" ]; then
	PLUGINS="epgsearch live streamdev-server vnsiserver"
	echo "Using default plugins: $PLUGINS"
fi

if [ -z "$UNINSTALL_PLUGINS" ]; then
	UNINSTALL_PLUGINS="false"
fi

if [ "$AUR" = "false" ]; then
	pac_man="pacman"
	installer=$pac_man
elif [ -z "$AUR" ] || [ "$AUR" != "false" ]; then
	AUR="true"
	bUser="builduser"
	pac_man="paru"
	installer="sudo -u $bUser $pac_man --nouseask --removemake --cleanafter"
fi

readarray -t enabled_arr < <(vdrctl list --enabled)
plug_arr=($PLUGINS)


_isAvailable() {
	plugin=$1;
	avail=$($pac_man -Ssq $plugin | grep "^$plugin$")
	if [ ! -z "$avail" ]; then
		echo 0
	else
		echo 1
	fi
}

_isInstalled() {
	package=$1
	$pac_man -Qi "${package}" &> /dev/null
	echo $?
}

_isEnabled() {
	plugin=$1;
	enabled=$(vdrctl list --enabled | grep "^$1$")
	if [[ "${enabled_arr[@]}" =~ "${plugin}" ]]; then
		echo 0
	else
		echo 1
	fi
}


typeset -i h=0 max_h=${#enabled_arr[*]};
while (( h < max_h )); do
	plug=${enabled_arr[$h]}
	pacname="vdr-$plug"

	# Plugin not in list
	if [[ ! "${plug_arr[@]}" =~ "${plug}" ]]; then
		vdrctl disable "${plug}"
		echo "Plugin ${plug} disabled."
		if [ "$UNINSTALL_PLUGINS" = "true" ]; then
			echo "Plugin ${plug} uninstalled."
			echo -e "Uninstalling VDR plugins is currently not supported.\nPlease rebuild the container instead."
		fi
	fi

	h=h+1
done


typeset -i i=0 max_i=${#plug_arr[*]};
while (( i < max_i )); do
	plug=${plug_arr[$i]}
	pacname="vdr-$plug"

	# Plugin not installed
	if [ $(_isInstalled "${pacname}") = "1" ] && [ $(_isAvailable "${pacname}") = "0" ]; then
		echo "Plugin ${plug} is not installed."
		## use "overwrite" because of busybox
		$installer -S --overwrite "/usr/bin/*" --noconfirm ${pacname} |& grep -iv -e "directory permissions differ" -e "filesystem: 775"	## <- Ugly but unavoidable to prevent error requests.
	fi

	# Plugin installed
	if [ $(_isInstalled "${pacname}") = "0" ] && [ $(_isEnabled "${plug}") = "1" ]; then
		vdrctl enable "${plug}"
		echo "Plugin ${plug} enabled."
	fi

	i=i+1
done
