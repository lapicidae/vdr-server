#!/command/with-contenv bash


main_dir="/vdr"
sys_dir="$main_dir/system"	# "/etc/vdr" equivalent


_isEnabled() {
	plugin=$1;
	enabled=$(vdrctl list --enabled | grep "^$1$")
	if [[ "$enabled" =~ $plugin ]]; then
		echo 0	# Success
	else
		echo 1	# Error
	fi
}


# system
if [ -d "$sys_dir" ]; then
	# delete orphaned vdr plugin links
	find "$sys_dir/conf.d" -xtype l -delete

	# eMail config (msmtp)
	msmtp_conf="/etc/msmtprc"
	msmtp_conf_new="$sys_dir/eMail.conf"
	if [ -f "$msmtp_conf_new" ]; then
		CONF_COMP="$(cmp --silent $msmtp_conf $msmtp_conf_new; echo $?)"
		if [ "$CONF_COMP" != "0" ]; then	# only if files are not the same
			echo "Copy new eMail config"
			cp -f "$msmtp_conf_new" "$msmtp_conf"
			chown root:root $msmtp_conf
			chmod 640 $msmtp_conf
		fi
	fi
fi


# crontab naludump
if [ "${START_NALUDUMP:="false"}" != "false" ] && [ -n "$START_NALUDUMP_AT" ]; then
	TMP_CRON=$(mktemp --suffix=".crontab")
	busybox crontab -u vdr -l > "$TMP_CRON"
	mapfile -d ' ' -t ctab_old < <(grep 'naludump' "$TMP_CRON" | tr -d '\n')

	if [[ "${ctab_old[0]}" = '@'* ]]; then
		ctab_time="$(printf '%s' "${ctab_old[0]}")"
		ctab_command="$(printf '%s' "${ctab_old[*]:1}")"
	else
		ctab_time="$(printf '%s' "${ctab_old[*]:0:5}")"
		ctab_command="$(printf '%s' "${ctab_old[*]:5}")"
	fi

	if [ "$START_NALUDUMP_AT" != "$ctab_time" ]; then
		echo "naludump crontab: set start to '$START_NALUDUMP_AT'"
		sed -i '/naludump/d' "$TMP_CRON"
		echo "$START_NALUDUMP_AT $ctab_command" >> "$TMP_CRON"
		chown vdr:vdr "$TMP_CRON"
		busybox crontab -u vdr "$TMP_CRON"
	#else
	#	echo "naludump crontab: desired ($START_NALUDUMP_AT) and current ($ctab_time) start time are identical"
	fi

	rm -f "$TMP_CRON"
fi


# protect cam.data
cam_data="/var/cache/vdr/cam.data"
if [ -f "$cam_data" ]; then
	if [ "$PROTECT_CAMDATA" = "true" ]; then
		chmod 0444 $cam_data
	else
		chmod 0664 $cam_data
	fi
fi



## VDR Plugins ##

# epgsearch
if [ "$(_isEnabled "epgsearch")" = "0" ]; then
	plug_dir="/vdr/config/plugins/epgsearch"
	#loc=$(echo "$LANG" | cut -d "." -f 1)
	confl_templ="$plug_dir/epgsearchconflmail.templ"
	#confl_templ_loc="$plug_dir/epgsearchconflmail-$loc.templ"
	#upd_templ="$plug_dir/epgsearchupdmail.templ"
	if [ ! -d $plug_dir ]; then
		mkdir -p $plug_dir
	fi
	if [ -f "$confl_templ" ] && [ ! -L "$confl_templ" ]; then
		tmp_templ="/tmp/epgsearchconflmail.templ"
		curl -s -o $tmp_templ https://projects.vdr-developer.org/git/vdr-plugin-epgsearch.git/plain/conf/epgsearchconflmail.templ
		if cmp -s "$confl_templ" "$tmp_templ"; then
			mkdir -p $plug_dir/i18n
			confl_templ_us="i18n/epgsearchconflmail-en_US.templ"
			rm $tmp_templ
			mv $confl_templ $plug_dir/$confl_templ_us
			ln -s $confl_templ_us $confl_templ
		fi
	fi
fi

# vdrmanager
if [ "$(_isEnabled "vdrmanager")" = "0" ]; then
	plug_dir="/vdr/config/plugins/vdrmanager"
	if [ ! -d "$plug_dir" ]; then
		mkdir -p $plug_dir
	fi
	if [ ! -e "$plug_dir/vdrmanager.pem" ]; then
		openssl req -newkey rsa:2048 -new -nodes -x509 -days 7300 -keyout $plug_dir/vdrmanager.key -out $plug_dir/vdrmanager.pem -batch
		rm -f $plug_dir/{vdrmanager.crt,vdrmanager.key}
	fi
fi

# live
live_dir="/vdr/config/plugins/live"
if [ -f "$live_dir/live.pem" ]; then
	chmod ug+r $live_dir/live.pem
fi
if [ -f "$live_dir/live-key.pem" ]; then
	chmod ug+r $live_dir/live-key.pem
fi

# ciplus
ci_plus="/vdr/cache/plugins/ciplus/"
if [ -d "$ci_plus" ] && [ -n "$(ls -A $ci_plus)" ]; then
	chmod -f ug+rw -- *.auth || true
fi
