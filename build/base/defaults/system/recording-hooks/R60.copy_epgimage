#!/bin/bash
# https://github.com/yavdr/yavdr-base/raw/master/scripts/R60copy_epgimage


# Enable recordingaction
ENABLED="false"


# epg definitions
EPGIMAGESPATH="/vdr/cache/epgimages"
EPGIMAGESFORMAT="jpg"


# eventid for recording
geteventid() {
	for file in "${origin}/info"*; do
		EVENTID=$(egrep "^E " "$file" | cut -d " " -f 2)
		[ -n "$EVENTID" ] && return 0
	done
	return 1
}

copyepgimages() {
	# This function takes 3 arguments:
	# $1 directory that contains the info file for the recording
	# $2 destination for epgimages
	# $3 directory with epgimages
        origin="$1"
        target="$2"
        epgimages_dir="$3"

        for i in "$origin" "$target" "$epgimages_dir"; do
		[ -z "$i" ] && logger -t recordingaction "copyepgimages: got an invalid argument" && exit 0
	done

	geteventid "$origin" || return 0
	find "$epgimages_dir" -name "${EVENTID}_*.${EPGIMAGESFORMAT}" -exec cp {} "${target}/" \;
}


if [ ${ENABLED:="true"} != "false" ]; then
	case $1 in
		before)
			# do here whatever you would like to do right BEFORE
			# the recording $2 STARTS
			;;
		started)
			# do here whatever you would like to do right AFTER
			# the recording $2 STARTED
			copyepgimages "$2" "$2" "$EPGIMAGESPATH"
			;;		
		after)
			# do here whatever you would like to do right AFTER
			# the recording $2 ENDED
			#copyepgimages $EPGIMAGESPATH
			;;
		edited)
			# do here whatever you would like to do right AFTER
			# the recording $3 has been EDITED (path is $2)
			copyepgimages "$3" "$2" "$3" 
			[ -f "${3}/info.epg2vdr" ] && cp "${3}/info.epg2vdr" "${2}/"
			;;
		deleted)
			# do here whatever you would like to do right AFTER
			# the recording $2 has been DELETED
			;;
	esac
else
	logger -t recordingaction "copy-epgimage is disabled"
fi
